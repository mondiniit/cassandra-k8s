- name: Create cassandra statefulset manifest
  copy:
    dest: "/home/{{ ansible_user }}/cassandra-{{ item.region }}.yaml"
    content: |
      apiVersion: v1
      kind: Service
      metadata:
        labels:
          app: cassandra
        name: cassandra
      spec:
        clusterIP: None
        ports:
          - port: 9042
        selector:
          app: cassandra
      ---
      apiVersion: "apps/v1beta1"
      kind: StatefulSet
      metadata:
        name: cassandra
      spec:
        serviceName: cassandra
        replicas: 3
        template:
          metadata:
            labels:
              app: cassandra
          spec:
            terminationGracePeriodSeconds: 1800
            containers:
              - name: cassandra
                image: cassandra:3.11.4
                imagePullPolicy: IfNotPresent
                ports:
                  - containerPort: 7000
                    name: intra-node
                  - containerPort: 7001
                    name: tls-intra-node
                  - containerPort: 7199
                    name: jmx
                  - containerPort: 9042
                    name: cql
                resources:
                  limits:
                    cpu: "500m"
                    memory: 2Gi
                  requests:
                    cpu: "500m"
                    memory: 1Gi
                securityContext:
                  capabilities:
                    add:
                      - IPC_LOCK
                lifecycle:
                  preStop:
                    exec:
                      command:
                        - /bin/sh
                        - -c
                        - nodetool drain
                env:
                  - name: CASSANDRA_SEEDS
                    value: cassandra-0.cassandra.cassandra-{{ item.region }}.svc.cluster.local, cassandra-0.cassandra.cassandra-{{ item.remote_region }}.svc.cluster.local
                  - name: MAX_HEAP_SIZE
                    value: 900M
                  - name: HEAP_NEWSIZE
                    value: 300M
                  - name: CASSANDRA_CLUSTER_NAME
                    value: "Cassandra"
                  - name: CASSANDRA_DC
                    value: "{{ item.region }}"
                  - name: CASSANDRA_RACK
                    value: "Rack1"
                  - name: CASSANDRA_ENDPOINT_SNITCH
                    value: GossipingPropertyFileSnitch
                  - name: JVM_EXTRA_OPTS
                    value: "-Dcassandra.config=/tmp/custom_cassandra/cassandra.yaml"
                volumeMounts:
                  - name: cassandra-data
                    mountPath: /var/lib/cassandra/data
                  - name: cassandra-config
                    mountPath: /tmp/custom_cassandra
            volumes:
              - name: cassandra-config
                configMap:
                  name: cassandra-config
        volumeClaimTemplates:
          - metadata:
              name: cassandra-data
            spec:
              accessModes: ["ReadWriteOnce"]
              storageClassName: premium
              resources:
                requests:
                  storage: 5Gi
      ---
      apiVersion: v1
      kind: Service
      metadata:
        name: cassandra-public
        labels:
          app: cassandra
      spec:
        type: NodePort
        ports:
        - port: 9042
          targetPort: 9042
          nodePort: {{ lb_rule_port_cqlsh }}
          name: cqlsh
        selector:
          app: cassandra
  with_items:
    - { region: "{{ regions.split(',')[0] }}", remote_region: "{{ regions.split(',')[1] }}" }
    - { region: "{{ regions.split(',')[1] }}", remote_region: "{{ regions.split(',')[0] }}" }

- name: Deploy cassandra resources
  shell: "kubectl --context {{ item.context }} apply -f cassandra-{{ item.region }}.yaml -n cassandra-{{ item.region }}"
  with_items:
    - { context: "{{ cluster_name }}-{{ regions.split(',')[0] }}", region: "{{ regions.split(',')[0] }}" }
    - { context: "{{ cluster_name }}-{{ regions.split(',')[1] }}", region: "{{ regions.split(',')[1] }}" }

- name: Clean up working files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - cassandra-{{ regions.split(',')[0] }}.yaml
    - cassandra-{{ regions.split(',')[1] }}.yaml